@import './utilities/functions';
// @import '~trunks-ui/utilities/functions';

// Square Size, Brick & Block Spacing
$square-size: 0.8rem;
$brick-spacing: $square-size;
$block-spacing: $square-size * 2;
$block-spacing-mobile: $block-spacing;

// Control height
$control-height: 4rem; // unit must same as Font size
$control-line-height: 1.5;

// Font size
$size-small: 1.2rem;
$size-normal: 1.6rem;
$size-medium: 2rem;
$size-large: 2.4rem;
$size-xlarge: 2.8rem;
$size-xxlarge: 3.2rem;

$font-sizes: (
  "size-small": $size-small,
  "size-normal": $size-normal,
  "size-medium": $size-medium,
  "size-large": $size-large,
  "size-xlarge": $size-xlarge,
  "size-xxlarge": $size-xxlarge
);

// Weight
$weight-light: 300;
$weight-normal: 400;
$weight-medium: 500;
$weight-semibold: 600;
$weight-bold: 700;

// Miscellaneous
$easing: ease-out;
$radius-small: 2px;
$radius: 4px;
$radius-large: 6px;
$radius-rounded: 290486px;
$speed: 86ms;

// Black and White
$black:         #0a0a0a;
$black-bis:     #121212;
$black-ter:     #242424;
$grey-darker:   #363636;
$grey-dark:     #4a4a4a;
$grey:          #7a7a7a;
$grey-light:    #b5b5b5;
$grey-lighter:  #dbdbdb;
$grey-lightest: #ededed;
$white-ter:     #f5f5f5;
$white-bis:     #fafafa;
$white:         #ffffff;

// Colors
$orange:        #ff470f;
$yellow:        #ffdd57;
$green:         #23d160;
$turquoise:     #00d1b2;
$cyan:          #209cee;
$blue:          #3273dc;
$purple:        #b86bff;
$red:           #ff3860;

// Meaning Colors

// General colors
$scheme-main: $white;
$scheme-main-bis: $white-bis;
$scheme-main-ter: $white-ter;
$scheme-invert: $black;
$scheme-invert-bis: $black-bis;
$scheme-invert-ter: $black-ter;

$background: $white-ter; // almost white background, most use for hover background, divider, default background, disabled background
$border: $grey-lighter;
$border-hover: $grey-lighter;
$border-light: $grey-lightest;
$border-light-hover: $grey-light;

// Text colors
$text: $grey-dark;
$text-invert: $white;
$text-light: $grey;
$text-lighter: $grey-light;
$text-strong: $grey-darker;
$text-disabled: $white-bis;
$text-placeholder: $grey-light;

@function findColorInvert($color) {
  @if (colorLuminance($color) > 0.55) {
    @return $text;
  }
  @else {
    @return $text-invert;
  }
}

// Default colors
$primary: $turquoise;
$secondary: $blue;
$info: $cyan;
$success: $green;
$warning: $yellow;
$danger: $red;
$light: $white-ter;
$dark: $grey-darker;

// Link colors
$link: $primary;
$link-invert: findColorInvert($link);

// Custom color
$header-background: $blue;

// Custom color with class
$edit: $orange;
$delete: $red;

// Custom color class
$custom-colors: (
  "edit": ($edit),
  "delete": ($delete),
);
$custom-shades: null;

// Scrollbar width
$vertical-scrollbar-width: 17px;

// Responsive Breakpoint

// For 5 screen sizes; mobile, tablet, desktop, widescreen, fullhd
// mobile up to 767px;

// breakpoint for screen width 768 (ipad portrait)
// tablet size by chrome's device toolbar = 768
$tablet: 768px; 
// $tablet-use-desktop-layout: false;

// breakpoint for screen width 1024 (ipad landscape) (ipad pro portrait)
// desktop size by chrome's device toolbar, 768 + 256 = 1024
$desktop: 1024px; 

// breakpoint for screen width 1280, 1366 (ipad pro landscape), 1440
// widescreen size by bulma default, 1024 + 256 = 1280
$widescreen: 1280px;
$widescreen-enabled: false;

// breakpoint for screen width 1600, 1920, 2560
// fullhd size by 1280 + 256 = 1536
$fullhd: 1536px; 
$fullhd-enabled: false;


// For 2 screen sizes; mobile & desktop, Uncomment these vars.
// $tablet: 768px;
// $tablet-use-desktop-layout: true;
// $desktop: 1366px; // change to fit your requirement of desktop minimum screen width
// $widescreen-enabled: false;
// $fullhd-enabled: false;
// 
// $navbar-breakpoint: $tablet;
// 
// add script to index.html
// <script type="text/javascript">
//   (function setViewPort() {
//     if (window.matchMedia('screen and (min-width: 768px) and (max-width: 1365px)').matches) {
//       document.querySelector('meta[name="viewport"]').setAttribute('content', 'width=1366');
//     }
//   })();
// </script>


// For 2 screen sizes; tablet & desktop, Uncomment these vars.
// $mobile-use-tablet-layout: true;
// $tablet: 768px;
// $tablet-use-desktop-layout: false;
// $desktop: 1366px; // change to fit your requirement of desktop minimum screen width
// $widescreen-enabled: false;
// $fullhd-enabled: false;
// 
// $navbar-breakpoint: $tablet; or $desktop;
//
// add script to index.html
// <script type="text/javascript">
//   (function setViewPort() {
//     if (window.matchMedia('screen and (max-width: 767px)').matches) {
//       document.querySelector('meta[name="viewport"]').setAttribute('content', 'width=768');
//     }
//   })();
// </script>


// For Non-Responsive, Uncomment these vars.
// $mobile-use-desktop-layout: true;
// $tablet: 768px;
// $tablet-use-desktop-layout: true;
// $desktop: 1366px; // change to fit your requirement of desktop minimum screen width
// $widescreen-enabled: false;
// $fullhd-enabled: false;
// $body-overflow-x: auto;
// $body-min-width: $desktop - $vertical-scrollbar-width;


// navbar
$navbar-breakpoint: $desktop;

// Others
$sidebar-width: 0;
$navbar-height: 0;

// @import "~trunks-ui/utilities/variables";
// @import "~trunks-ui/utilities/mixins";
@import "./utilities/variables";
@import "./utilities/mixins";
