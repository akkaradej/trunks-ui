@import './utilities/functions';

// $variable-columns: false;

// Base font size
// $body-size: 16px;
$body-size: 15px;
// $body-size-mobile: $body-size;
$body-size-mobile: 15px;

// The section horizontal gap for desktop
$section-gap: $body-size * 1.5;

// The section horizontal gap for mobile
// $section-gap-mobile: $body-size-mobile * 1.5;

// The container horizontal gap for desktop, which acts as the offset for breakpoints
// In another word, this is minimum overall gap for desktop. It will be increase when window width > container's width + $gap
// Should be >= section gap
// $gap: $section-gap + 40;
$gap: $section-gap; // 22.5

// The container horizontal gap for mobile is none by design

// Gap of each side of a column, the gap between two columns will be twice = gutter (interm of grid systerm)
// Should be = 1.5rem / 2
// $column-gap: $body-size * 1.5 / 2;
$column-gap: $body-size * 1.5 / 2; // 11.25, gutter 22.5
// $column-gap-mobile: $body-size-mobile * 1.5 / 2;
$column-gap-mobile: $body-size-mobile * 1.5 / 2; // 11.25, gutter 22.5

// Scrollbar width
// $vertical-scrollbar-width: 17px;

// Responsive Breakpoint
// mobile up to 767px;
// $tablet: 768px; // tablet size by chrome's device toolbar    // for 768 = ipad portrait
// $desktop: 1024px; // desktop size by chrome's device toolbar // for 1024 = ipad landscape = ipad pro portrait
// $widescreen: 1280px;  // widescreen size by bulma default    // for 1280, 1366 = ipad pro landscape, 1440
// $fullhd: 1536px; // fullhd size by diff of each screen = 256 // for 1600, 1920, 2560

// For Non-Responsive, Uncomment these vars.
// $tablet: 1px;
// $desktop: 2px;
// $widescreen-enabled: false;
// $fullhd-enabled: false;
// $min-supported-screen-width: 1366; // change to fit your requirement
// And then @import "~soft-ngx/styles/non-responsive"; next to "~soft-ngx/styles/style";

// Font Family
// $family-sans-serif: BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", "Oxygen", "Ubuntu",
//  "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
$family-sans-serif: 'Helvetica Neue', 'Helvetica', BlinkMacSystemFont, -apple-system, 'Segoe UI',
  'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Arial', sans-serif;

// Font size
// $size-small: 0.75rem;  //12
// $size-normal: 1rem;    //16
// $size-medium: 1.25rem; //20
// $size-large: 1.5rem;   //24
// $size-xlarge: 2rem;    //32
// $size-xxlarge: 2.5rem; //40

$size-small: 0.8rem;      //12
$size-normal: 1rem;       //15
$size-medium: 1.2rem;     //18
$size-large: 1.4rem;      //21
$size-xlarge: 1.6rem;     //24
$size-xxlarge: 2rem;      //30

// Weight
// $weight-light: 300;
// $weight-normal: 400;
// $weight-medium: 500;
// $weight-semibold: 600;
// $weight-bold: 700;

$weight-normal: 400;
$weight-bold: 700;

// Spacing for margin, padding
// $space-small: 0.5rem;   //8
// $space-normal: 1rem;    //16
// $space-medium: 1.5rem;  //24
// $space-large: 2rem;     //32
// $space-xlarge: 3rem;    //48
// $space-xxlarge: 4rem;   //64

$space-small: 0.5rem;     //7.5
$space-normal: 1rem;      //15
$space-medium: 1.5rem;    //22.5
$space-large: 2rem;       //30
$space-xlarge: 3rem;      //45
$space-xxlarge: 4rem;     //60

// Miscellaneous
// $easing: ease-out;
// $radius-small: 2px;
// $radius: 4px;
// $radius-large: 6px;
// $radius-rounded: 290486px;
// $speed: 86ms;

// -- Custom vars defind here --
$header-height: 60px;

// Colors
$black:        hsl(0, 0%, 4%);
$black-bis:    hsl(0, 0%, 7%);
$black-ter:    hsl(0, 0%, 14%);
$grey-darker:  hsl(0, 0%, 21%);
$grey-dark:    hsl(0, 0%, 29%);
$grey:         hsl(0, 0%, 48%);
$grey-light:   hsl(0, 0%, 71%);
$grey-lighter: hsl(0, 0%, 86%);
$white-ter:    hsl(0, 0%, 96%);
$white-bis:    hsl(0, 0%, 98%);
$white:        hsl(0, 0%, 100%);
$orange:       hsl(14,  100%, 53%);
$yellow:       hsl(48,  100%, 67%);
$green:        hsl(141, 71%,  48%);
$turquoise:    hsl(171, 100%, 41%);
$blue:         hsl(217, 71%,  53%);
$purple:       hsl(271, 100%, 71%);
$red:          hsl(348, 100%, 61%);

// Meaning Colors
$primary: $turquoise;
$secondary: $blue;

$info: $blue;
$success: $green;
$warning: $yellow;
$danger: $red;

$light: $white-ter;
$dark: $grey-darker;

// Invert colors
$color-invert-to-dark: $grey-darker;
$color-invert-to-light: $white;

$primary-invert: findColorInvert($primary);
$secondary-invert: findColorInvert($secondary);

$info-invert: findColorInvert($info);
$success-invert: findColorInvert($success);
$warning-invert: findColorInvert($warning);
$danger-invert: findColorInvert($danger);

$light-invert: $dark;
$dark-invert: $light;

$colors: (
  'white': ($white, $black),
  'black': ($black, $white),
  'grey': ($grey, $white),
  'primary': ($primary, $primary-invert),
  'secondary': ($secondary, $secondary-invert),
  'info': ($info, $info-invert),
  'success': ($success, $success-invert),
  'warning': ($warning, $warning-invert),
  'danger': ($danger, $danger-invert),
  'light': ($light, $light-invert),
  'dark': ($dark, $dark-invert),
);

// General colors
// $body-background-color: $white;
// $background: $white-ter;
// $border: $grey-lighter;
// $border-hover: $grey-lighter;

// Text colors
// $text: $grey-dark;
// $text-invert: $white;
// $text-light: $grey;
// $text-strong: $grey-darker;
// $text-disabled: $grey-light;

// Link colors
// $link: $text;
// $link-invert: $text-invert;
// $link-visited: $link;
// $link-light: $text-light;

// $link-hover: invalid-color;
// $link-hover-border: invalid-color;

// $link-focus: invalid-color;
// $link-focus-border: invalid-color;

// $link-active: invalid-color;
// $link-active-border: invalid-color;

@import './utilities/variables';
@import './utilities/mixins';
