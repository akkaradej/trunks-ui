@use "../utilities/variables";
@use "bulma/sass/utilities/mixins" as bulma-mx;
@use "bulma/sass/components/modal" as bulma-modal;
@use "bulma/sass/elements/box" as bulma-box;

$modal-card-title-font-weight: variables.$weight-bold  !default;
// $modal-content-width: 640px !default;
$modal-small-width: 320px !default;
$modal-medium-width: 780px !default;
$modal-large-width: 960px !default;
$modal-full-width: 100% !default;
$modal-full-height: 100% !default;
$modal-card-head-box-shadow: none !default;
$modal-card-body-font-weight: variables.$weight-normal  !default;
$modal-close-background-color: bulmaRgba(variables.$scheme-invert, 0.2) !default;
$modal-close-color: variables.$scheme-main  !default;

.modal {
  &.has-no-footer {
    .modal-card {
      .modal-card-body {
        border-bottom-left-radius: bulma-modal.$modal-card-foot-radius;
        border-bottom-right-radius: bulma-modal.$modal-card-foot-radius;
      }
    }
  }

  // Depreciated
  .modal-card.modal-card-no-footer {
    .modal-card-body {
      border-bottom-left-radius: bulma-modal.$modal-card-foot-radius;
      border-bottom-right-radius: bulma-modal.$modal-card-foot-radius;
    }
  }

  .modal-card-title {
    text-align: center;
    font-weight: $modal-card-title-font-weight;
  }

  .modal-card-body {
    max-height: calc(100vh - 80px);
    font-weight: $modal-card-body-font-weight;
  }

  @each $name, $pair in variables.$colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.is-#{$name} {
      .modal-card-head {
        color: $color;
        background-color: $color;

        .modal-card-title {
          color: $color-invert;
        }
      }
    }
  }

  &.modal-scroll {
    >.modal-card {
      .modal-card-body {
        overflow-y: scroll;
      }
    }
  }
}

.modal-card-head {
  box-shadow: $modal-card-head-box-shadow;

  .modal-card-title {
    margin-left: (bulma-modal.$modal-close-dimensions * 1.25);
    margin-right: (bulma-modal.$modal-close-dimensions * 0.25);
  }

  .delete {
    width: bulma-modal.$modal-close-dimensions;
    height: bulma-modal.$modal-close-dimensions;
    max-height: bulma-modal.$modal-close-dimensions;
    max-width: bulma-modal.$modal-close-dimensions;
    color: inherit;
    background-color: $modal-close-background-color;

    &::before,
    &::after {
      background-color: $modal-close-color;
    }
  }
}

// modal size modifier
@mixin modal-size {
  >.modal-content,
  >.modal-card {
    width: bulma-modal.$modal-content-width;
  }

  &.modal-auto {
    >.modal-content,
    >.modal-card {
      width: auto;
    }
  }

  &.modal-small {
    >.modal-content,
    >.modal-card {
      width: $modal-small-width;
    }
  }

  &.modal-medium {
    >.modal-content,
    >.modal-card {
      width: $modal-medium-width;
    }
  }

  &.modal-large {
    >.modal-content,
    >.modal-card {
      width: $modal-large-width;
    }
  }

  &.modal-full {
    >.modal-content,
    >.modal-card {
      width: $modal-full-width;
      height: $modal-full-height;
    }
  }
}

.modal {
  @include bulma-mx.from(bulma-modal.$modal-breakpoint) {
    @include modal-size;
  }
}

// non-responsive
@if variables.$non-responsive-mobile {
  @include bulma-mx.mobile {
    .modal {
      @include modal-size;
    }
  }
}

// non-responsive
html {
  &.non-responsive,
  &.non-responsive-mobile.non-responsive-tablet {
    @include bulma-mx.touch {
      .modal {
        @include modal-size;
      }
    }
  }
  &.non-responsive-mobile:not(.non-responsive-mobile) {
    @include bulma-mx.mobile {
      .modal {
        @include modal-size;
      }
    }
  }
  &.non-responsive-tablet:not(.non-responsive-tablet) {
    @include bulma-mx.tablet-only {
      .modal {
        @include modal-size;
      }
    }
  }
}
