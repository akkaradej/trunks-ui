@use "sass:math";
@use "bulma/sass/utilities/mixins" as bulma-mx;
@use "../utilities/variables";

@forward "bulma/sass/form/tools" with (
  $label-color: variables.$text-strong !default,
  $label-weight: variables.$weight-bold !default,
);

$label-size: variables.$size-normal !default;
$control-icon-width: 3rem !default;

// Spacing
$field-spacing: variables.$block-spacing !default;
$field-spacing-mobile: variables.$block-spacing-mobile !default;
$field-horizontal-spacing: variables.$brick-spacing !default;
$field-horizontal-spacing-mobile: variables.$brick-spacing !default;
$label-spacing: variables.$brick-spacing !default;

.label {
  font-size: $label-size;
}

// Auto align label for horizontal field, even is-[size] is specified
.field.is-horizontal {
  .field-label {
    margin-top: math.div((variables.$control-height - $label-size * variables.$control-line-height), 2);

    @each $name, $size in variables.$font-sizes {
      &.is-#{str-slice($name, str-length("size-") + 1)} {
        font-size: $size;
        margin-top: math.div((variables.$control-height - $size * variables.$control-line-height), 2);
        padding: 0; // clear bulma padding
      }
    }

    &.is-align-top {
      margin-top: 0;
    }

  }
}

// Remove flex-grow 1:5 of field-label:field-body in bulma horizontal field
// define its width in case by case should be better
.field.is-horizontal {
  .field-label {
    flex-grow: 0;
    flex-basis: auto; // default auto, define this value in case by case
  }
  .field-body {
    flex-grow: 1;
  }
}

// Adjust space of icon, arrow
.control.has-icons-right .input,
.control.has-icons-right .select select {
  padding-right: $control-icon-width;
}
.control.has-icons-left .icon,
.control.has-icons-right .icon {
  width: $control-icon-width;
  height: variables.$control-height;
}

// Spacing
.field:not(:last-child) {
  margin-bottom: $field-spacing;
  &.is-horizontal {
    margin-bottom: $field-horizontal-spacing;
  }
}

.field.is-grouped {
  & > .control {
    &:not(:last-child) {
      margin-right: variables.$block-spacing;
    }
  }
}

.label:not(:last-child) {
  margin-bottom: $label-spacing;
}

.help {
  margin-top: math.div(variables.$brick-spacing, 2);
}

@include bulma-mx.mobile {
  .field:not(:last-child) {
    margin-bottom: $field-horizontal-spacing-mobile;
  }

  .field-label {
    margin-bottom: 0;
  }
}

@include bulma-mx.tablet {
  .field-label {
    margin-right: variables.$block-spacing;
  }

  .field-body {
    flex-basis: auto;
    & > .field {
      &:not(:last-child) {
        margin-right: math.div($field-horizontal-spacing, 2);
      }
    }
  }
}
